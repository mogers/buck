{namespace buck.install}

/***/
{template .soyweb}
  {call buck.page}
    {param title: 'Downloading and Installing Buck' /}
    {param prettify: true /}
    {param description}
      How to download, install, and setup Buck for your project.
    {/param}
    {param content}

There are two ways to install Buck:

<p />
<ol>
<h2 id="os-x-install"><li>Install with Homebrew</li></h2>

<p>
  To install Buck on OS X, use <a href="http://brew.sh/">Homebrew</a> (first
  make sure <a href="https://developer.apple.com/xcode/download/">Xcode<a> and
  the <a href="https://developer.apple.com/downloads/">Command Line Tools</a> are installed
  and up to date).  You have two choices when using Homebrew.  You can choose to get the latest
  binary <a href="https://github.com/facebook/buck/releases/latest">release</a> (which happens
  roughly every week):
</p>

{literal}<pre>
brew update
brew tap facebook/fb
brew install buck
</pre>
{/literal}

<p>
  Or, you can get the latest and greatest code and build it locally:
</p>

{literal}<pre>
brew update
brew tap facebook/fb
brew install --HEAD buck
</pre>
{/literal}

<h2 id="manual-build"><li>Manual Build</li></h2>

To manually build Buck, download and install the following prerequisites:
<ul>
  <li>
    <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html"
      >Oracle JDK 8</a> or{sp}
    <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html"
      >Oracle JDK 7</a>
  </li>
  <li>
    <a href="http://ant.apache.org/">Apache Ant 1.8 (or newer)</a>
  </li>
  <li>
    <a href="https://www.python.org/downloads/">Python 2.6 or 2.7</a>
  </li>
  <li>
    <a href="http://git-scm.com/download">Git</a>
  </li>
  <li>
    A working C compiler (<code>gcc</code> or <code>clang</code>). Not currently required on Windows.
  </li>
</ul>

Once you have the above tools installed, you can install Buck as follows:
{call buck.installationInstructions /}

If everything worked correctly, you should see something like:

{literal}<pre>
buck build tool
usage:
  buck [options]
  buck command --help
  buck command [command-options]
available commands:
  audit       lists the inputs for the specified target
  build       builds the specified target
  cache       makes calls to the artifact cache
  clean       deletes any generated files
  fetch       downloads remote resources to your local machine
  install     builds and installs an application
  project     generates project configuration files for an IDE
  query       provides facilities to query information about the target nodes graph
  quickstart  generates a default project directory
  root        prints the absolute path to the root of the current buck project
  run         runs a target as a command
  server      query and control the http server
  targets     prints the list of buildable targets
  test        builds and runs the tests for the specified target
  uninstall   uninstalls an APK
options:
 --help         : Shows this screen and exits.
 --version (-V) : Show version number.
{/literal}</pre>

<p>
  Because you will likely be running <code>./bin/buck</code> often, you should add it to your path
  so that you can simply run <code>buck</code> from the command line.
</p>
</ol>

<h2 id="install-watchman">Installing Watchman</h2>

<p>
  If you have <code>watchman</code> available, Buck will use <a href="{ROOT}command/buckd.html">a
  daemon</a> which will prevent Buck from parsing all of your
  {sp}{call buck.concept_link}{param page: 'build_file' /}{param name: 'build files' /}{/call} every
  time and cache some other things as well.  You'll want to follow the
  {sp}<a href="https://facebook.github.io/watchman/docs/install.html">installation instructions</a>
  {sp}for <code>watchman</code>.  It is strongly recommended that you install Watchman.
</p>

<h2 id="locate-android-sdk">Android SDK and NDK</h2>

<p>
  If you plan to use Buck to build Android code, you will need to tell Buck where to find our SDK
  and NDK.  Buck will look at the value of the <code>ANDROID_HOME</code> environment variable to
  locate the SDK files on your system.  Buck will look at <code>ANDROID_NDK</code> to find a
  specific version of the NDK, and <code>ANDROID_NDK_REPOSITORY</code> to find an appropriate NDK
  from a directory containing multiple NDK versions.
</p>
    {/param}
  {/call}
{/template}
